openapi: 3.0.3
info:
  title: API Шлюз. Объявления
  description: API шлюза для управления объявлениями
  version: 0.0.3
servers:
  - url: '/api'
tags:
  - name: Announcements
    description: API управления объявлениями
paths:
  # общие операции
  /announcements/create:
    post:
      tags: [ Announcements ]
      operationId: createAnnouncement
      summary: Создать объявление
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createAnnouncementDto'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: object
                title: createAnnouncementCreated
                properties:
                  content:
                    $ref: '#/components/schemas/announcementIdentifierDto'
        400:
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    # audienceNullOrEmpty
                    # contentNullOrEmpty
                    $ref: '#/components/schemas/createAnnouncementResponses'
        401:
          description: Unauthorized
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                title: createAnnouncementForbidden
                properties:
                  code:
                    # announcementCreationForbidden
                    $ref: '#/components/schemas/createAnnouncementResponses'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                title: createAnnouncementNotFound
                properties:
                  code:
                    # announcementCategoriesDoNotExist
                    # filesDoNotExist
                    # surveysDoNotExist
                    $ref: '#/components/schemas/createAnnouncementResponses'
        409:
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                title: createAnnouncementConflict
                properties:
                  code:
                    # delayedPublishingMomentIsInPast
                    # delayedHidingMomentIsInPast
                    # delayedPublishingMomentAfterDelayedHidingMoment
                    # pieceOfAudienceDoesNotExist
                    $ref: '#/components/schemas/createAnnouncementResponses'
        500:
          description: Internal Server Error
  
  /announcements/get-details:
    get:
      tags: [ Announcements ]
      operationId: getAnnouncementDetails
      summary: Получить подробности о выбранном объявлении
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/announcementIdentifierDto'
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                title: getAnnouncementDetailsOk 
                properties:
                  content:
                    $ref: '#/components/schemas/announcementDetailsDto'
        400:
          # Некорректный формат идентификатора
          description: Bad Request
        401:
          description: Unauthorized
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                title: getAnnouncementDetailsForbidden
                properties:
                  code:
                    # detailsAccessForbidden
                    $ref: '#/components/schemas/getAnnouncementDetailsResponses'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                title: getAnnouncementDetailsNotFound
                properties:
                  code:
                    # announcementDoesNotExist
                    $ref: '#/components/schemas/getAnnouncementDetailsResponses'
        500:
          description: Internal Server Error

  /announcements/update:
    put:
      tags: [ Announcements ]
      operationId: updateAnnouncement
      summary: Редактировать объявление
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateAnnouncementDto'
      responses:
        200:
          description: Ok
        400:
          description: Bad Request
          # Описанные ниже коды + некорректный формат идентификатора
          content:
            application/json:
              schema:
                type: object
                title: updateAnnouncementBadRequest
                properties:
                  code:
                    # contentEmpty
                    # audienceEmpty
                    $ref: '#/components/schemas/updateAnnouncementResponses'
        401:
          description: Unauthorized
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                title: updateAnnouncementForbidden
                properties:
                  code:
                    # announcementEditingForbidden
                    $ref: '#/components/schemas/updateAnnouncementResponses'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                title: updateAnnouncementNotFound
                properties:
                  code:
                    # announcementDoesNotExist
                    # announcementCategoriesDoNotExist
                    # attachmentDoesNotExist
                    # pieceOfAudienceDoesNotExist
                    $ref: '#/components/schemas/updateAnnouncementResponses'
        409:
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                title: updateAnnouncementConflict
                properties:
                  code:
                    # delayedPublishMomentIsInPast
                    # delayedHideMomentIsInPast
                    # autoHidingAnAlreadyHiddenAnnouncement
                    # autoPublishingPublishedAndNonHiddenAnnouncement
                    # cannotDetachSurvey
                    $ref: '#/components/schemas/updateAnnouncementResponses'
        500:
          description: Internal Server Error
  
  /announcements/delete:
    delete:
      tags: [ Announcements ]
      operationId: deleteAnnouncement
      summary: Удалить объявление
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/announcementIdentifierDto'
      responses:
        200:
          description: Ok
        400:
          # Некорректный формат идентификатора
          description: Bad Request
        401:
          description: Unauthorized
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                title: deleteAnnouncementForbidden
                properties:
                  code:
                    # announcementDeletionForbidden
                    $ref: '#/components/schemas/deleteAnnouncementResponses'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                title: deleteAnnouncementNotFound
                properties:
                  code:
                    # announcementDoesNotExist
                    $ref: '#/components/schemas/deleteAnnouncementResponses'
        500:
          description: Internal Server Error
  
  # опубликованные объявления  
  /announcements/published/get-list:
    get:
      tags: [ Announcements ]
      operationId: getPostedAnnouncementList
      summary: Получить список опубликованных объявлений
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                title: getPostedAnnouncementListOk
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/announcementSummaryDto'
        401:
          description: Unauthorized
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                title: getPostedAnnouncementListForbidden
                properties:
                  code:
                    # postedAnnouncementsListAccessForbidden
                    $ref: '#/components/schemas/getPostedAnnouncementListResponses'
        500:
          description: Internal Server Error
  
  /announcements/published/hide:
    post:
      tags: [ Announcements ]
      operationId: hidePostedAnnouncement
      summary: Скрыть опубликованное объявление
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/announcementIdentifierDto'
      responses:
        200:
          description: Ok
        400:
          # Некорректный формат идентификатора
          description: Bad Request
        401:
          description: Unauthorized
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                title: hidePostedAnnouncementForbidden
                properties:
                  code:
                    # announcementHidingForbidden
                    $ref: '#/components/schemas/hidePostedAnnouncementResponses'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                title: hidePostedAnnouncementNotFound
                properties:
                  code:
                    # announcementDoesNotExist
                    $ref: '#/components/schemas/hidePostedAnnouncementResponses'
        409:
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                title: hidePostedAnnouncementConflict
                properties:
                  code:
                    # announcementAlreadyHidden
                    # announcementNotYetPublished
                    $ref: '#/components/schemas/hidePostedAnnouncementResponses'
        500:
          description: Internal Server Error
  
  # скрытые объявления
  /announcements/hidden/get-list:
    get:
      tags: [ Announcements ]
      operationId: getHiddenAnnouncementList
      summary: Получить список скрытых объявлений
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                title: getHiddenAnnouncementListOk
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/announcementSummaryDto'
        401:
          description: Unauthorized
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                title: getHiddenAnnouncementListForbidden
                properties:
                  code:
                    # hiddenAnnouncementsListAccessForbidden
                    $ref: '#/components/schemas/getHiddenAnnouncementListResponses'
        500:
          description: Internal Server Error
  
  /announcements/hidden/restore:
    post:
      tags: [ Announcements ]
      operationId: restoreHiddenAnnouncement
      summary: Восстановить скрытое объявление
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/announcementIdentifierDto'
      responses:
        200:
          description: Ok
        400:
          # Некорректный формат идентификатора
          description: Bad Request
        401:
          description: Unauthorized
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                title: restoreHiddenAnnouncementForbidden
                properties:
                  code:
                    # restoreForbidden
                    $ref: '#/components/schemas/restoreHiddenAnnouncementResponses'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                title: restoreHiddenAnnouncementNotFound
                properties:
                  code:
                    # announcementDoesNotExist
                    $ref: '#/components/schemas/restoreHiddenAnnouncementResponses'
        409:
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                title: restoreHiddenAnnouncementConflict
                properties:
                  code:
                    # announcementNotHidden
                    $ref: '#/components/schemas/restoreHiddenAnnouncementResponses'
        500:
          description: Internal Server Error
  
  # объявления с отложенной публикацией
  /announcements/delayed-publishing/get-list:
    get:
      tags: [ Announcements ]
      operationId: getDelayedPublishingAnnouncementList
      summary: Получить список объявлений, ожидающих отложенную публикацию
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                title: getDelayedPublishingAnnouncementListOk
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/announcementSummaryDto'
        401:
          description: Unauthorized
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                title: getDelayedPublishingAnnouncementListForbidden
                properties:
                  code:
                    # getDelayedPublishingAnnouncementListResponses
                    $ref: '#/components/schemas/getDelayedPublishingAnnouncementListResponses'
        500:
          description: Internal Server Error
  
  /announcements/delayed-publishing/publish-immediately:
    post:
      tags: [ Announcements ]
      operationId: publishImmediatelyDelayedPublishingAnnouncement
      summary: Сразу опубликовать отложенное объявление
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/announcementIdentifierDto'
      responses:
        200:
          description: Ok
        400:
          # Некорректный формат идентификатора
          description: Bad Request
        401:
          description: Unauthorized
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                title: publishImmediatelyDelayedPublishingAnnouncementForbidden
                properties:
                  code:
                    # immediatePublishingForbidden
                    $ref: '#/components/schemas/publishImmediatelyDelayedAnnouncementResponses'
        404:
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                title: publishImmediatelyDelayedPublishingAnnouncementNotFound
                properties:
                  code:
                    # announcementDoesNotExist
                    $ref: '#/components/schemas/publishImmediatelyDelayedAnnouncementResponses'
        500:
          description: Internal Server Error
  
  # объявления с отложенным сокрытием
  /announcements/delayed-hidden/get-list:
    get:
      tags: [ Announcements ]
      operationId: getDelayedHiddenAnnouncementList
      summary: Получить список объявлений, ожидающих отложенное сокрытие
      responses:
        200:
          description: Ok
          content:
            application/json:
              schema:
                type: object
                title: getDelayedHiddenAnnouncementListOk
                properties:
                  content:
                    type: array
                    items:
                      $ref: '#/components/schemas/announcementSummaryDto'
        401:
          description: Unauthorized
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                title: getDelayedHiddenAnnouncementListForbidden
                properties:
                  code:
                    # getDelayedHiddenAnnouncementListAccessForbidden
                    $ref: '#/components/schemas/getDelayedHiddenAnnouncementListResponses'
        500:
          description: Internal Server Error

components:
  schemas:
    createAnnouncementDto:
      type: object
      properties:
        content:
          description: Текстовое содержимое объявления
          type: string
        userIds:
          description: Идентификаторы пользователей, для которых создается объявление
          type: array
          items:
            type: string
            format: uuid
            uniqueItems: true
          minItems: 1
        categoryIds:
          description: Идентификаторы категорий объявлений
          type: array
          items:
            type: string
            format: uuid
            uniqueItems: true
        attachmentIds:
          description: Идентификаторы вложений, прикрепляемых к объявлению
          type: array
          items:
            type: string
            format: uuid
            uniqueItems: true
          minItems: 1
          nullable: true
        delayedPublishingAt:
          description: Срок отложенной публикации объявления
          type: string
          format: date-time
          nullable: true
          default: null
        delayedHidingAt:
          description: Срок отложенного сокрытия объявления
          type: string
          format: date-time
          nullable: true
          default: null

    announcementIdentifierDto:
      description: Идентификатор объявления
      type: string
      format: uuid

    announcementSummaryDto:
      type: object
      properties:
        id:
          description: Идентификатор объявления
          type: string
          format: uuid
        authorName:
          description: Автор объявления
          type: string
        content:
          description: Текстовое содержимое объявления
          type: string
        publishedAt:
          description: Время публикации объявления
          type: string
          format: date-time
        viewsCount:
          description: Количество просмотревших объявление пользователей
          type: integer
          minimum: 0
        audienceSize:
          description: Размер аудитории объявления
          type: integer
          minimum: 0
        files:
          description: Массив файлов, прикрепленных к объявлению
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/fileSummaryDto'
        surveys:
          description: Массив опросов, прикрепленных к объявлению
          type: array
          nullable: true
          items:
            $ref: './surveys-api.yaml#/components/schemas/surveyDetailsDto'

    announcementDetailsDto:
      type: object
      properties:
        id:
          description: Идентификатор объявления
          type: string
          format: uuid
        content:
          description: Текстовое содержимое объявления
          type: string
        authorName:
          description: Автор объявления
          type: string
        viewsCount:
          description: Количество просмотревших объявление пользователей
          type: integer
          minimum: 0
        audienceSize:
          description: Размер аудитории объявления
          type: integer
          minimum: 0
        categories:
          description: Массив категорий объявлений
          type: array
          items:
            $ref: './announcement-categories-api.yaml#/components/schemas/announcementCategoryDetailsDto'
        files:
          description: Массив файлов, прикрепленных к объявлению
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/fileSummaryDto'
        surveys:
          description: Массив опросов объявления
          type: array
          nullable: true
          items:
            $ref: './surveys-api.yaml#/components/schemas/surveyDetailsDto'
        publishedAt:
          description: Момент публикации объявления. Объявление не является опубликованным, если null
          type: string
          format: date-time
          nullable: true
          default: null
        hiddenAt:
          description: Момент сокрытия объявления. Объявление не является скрытым, если null
          type: string
          format: date-time
          nullable: true
          default: null
        delayedHidingAt:
          description: Момент отложенного сокрытия объявления. Объявление не будет скрыто автоматически, если null
          type: string
          format: date-time
          nullable: true
          default: null
        delayedPublishingAt:
          description: Момент отложенной публикации объявления. Объявление не будет опубликовано автоматически, если null
          type: string
          format: date-time
          nullable: true
          default: null
        audience:
#          $ref: '#/components/schemas/announcementAudienceDto'
          description: Аудитория объявления
          type: array
          items: 
            $ref: '#/components/schemas/announcementAudienceUser'

    fileSummaryDto:
      type: object
      properties:
        id:
          description: Идентификатор файла
          type: string
          format: uuid
        name:
          description: Название файла
          type: string
        sizeInBytes:
          description: Размер файла в байтах
          type: integer
          format: int64
        type:
          description: Тип файла
          type: string
          enum:
            - mediafile # Медиафайл отображается в объявлении сразу
            - file # Обычный файл загружается вручную

    updateAnnouncementDto:
      type: object
      required:
        - id
        - delayedPublishingAtChanged
        - delayedHidingAtChanged
      properties:
        id:
          type: string
          format: uuid
        content:
          description: Текстовое содержимое объявления. Null, если значение свойства не изменилось
          type: string
          nullable: true
          default: null
        categoryIds:
          $ref: './common-schemas.yaml#/components/schemas/updateIdentifierListDto'
        audienceIds:
          $ref: './common-schemas.yaml#/components/schemas/updateIdentifierListDto'
        attachmentIds:
          $ref: './common-schemas.yaml#/components/schemas/updateIdentifierListDto'
        delayedPublishingAtChanged:
          description: Было ли изменено значение момента отложенной публикации
          type: boolean
        delayedPublishingAt:
          description: Момент отложенной публикации объявления. Null, если отложенная публикация не предполагается
          type: string
          format: date-time
          nullable: true
          default: null
        delayedHidingAtChanged:
          description: Было ли изменено значение момента отложенного сокрытия
          type: boolean
        delayedHidingAt:
          description: Момент отложенного сокрытия объявления. Null, если отложенное сокрытие не предполагается
          type: string
          format: date-time
          nullable: true
          default: null
    
#    announcementAudienceDto:
#      description: Аудитория объявления
#      type: object
#      properties:
#        rootNode:
#          oneOf:
#            - $ref: '#/components/schemas/announcementAudienceUserGroup'
#            - $ref: '#/components/schemas/announcementAudienceUser'

#    announcementAudienceUserGroup:
#      description: Группа пользователей в дереве аудитории объявления
#      type: object
#      properties:
#        id:
#          type: string
#          format: uuid
#        name:
#          type: string
#        nodes:
#          type: array
#          items:
#            oneOf:
#              - $ref: '#/components/schemas/announcementAudienceUserGroup'
#              - $ref: '#/components/schemas/announcementAudienceUser'

    announcementAudienceUser:
      description: Обычный пользователь в дереве аудитории объявления
      type: object
      properties:
        id:
          type: string
          format: uuid
        firstName:
          type: string
        secondName:
          type: string
        patronymic:
          type: string

    createAnnouncementResponses:
      type: string
      enum:
        # 400
        - audienceNullOrEmpty
        - contentNullOrEmpty
        # 403
        - announcementCreationForbidden
        # 404
        - announcementCategoriesDoNotExist
        - attachmentsDoNotExist
        - pieceOfAudienceDoesNotExist
        # 409
        - delayedPublishingMomentIsInPast
        - delayedHidingMomentIsInPast
        - delayedPublishingMomentAfterDelayedHidingMoment
      description: >
        Ответы:
          audienceNullOrEmpty - Список аудитории null или пустой
          contentNullOrEmpty - Текстовое содержимое объявления является null, пустым или состоит только из пробельных символов
          announcementCreationForbidden - Пользователь не имеет права создать объявление
          announcementCategoriesDoNotExist - В качестве одного или нескольких из id категорий объявлений прикреплен несуществующий в базе id
          attachmentsDoNotExist - В качестве одного или нескольких из id вложений прикреплен несуществующий в базе id
          pieceOfAudienceDoesNotExist - В качестве одного или нескольких из id пользователей прикреплен несуществующий в базе id
          delayedPublishingMomentIsInPast - Момент отложенной публикации уже наступил в прошлом
          delayedHidingMomentIsInPast - Момент автоматического сокрытия уже наступил в прошлом
          delayedPublishingMomentAfterDelayedHidingMoment - Момент отложенной публикации наступит после момента отложенного сокрытия

    getAnnouncementDetailsResponses:
      type: string
      enum:
        # 403
        - detailsAccessForbidden
        # 404
        - announcementDoesNotExist
      description: >
        Ответы:
          detailsAccessForbidden - Пользователь не имеет права просмотреть подробности объявления
          announcementDoesNotExist - Объявление не существует

    updateAnnouncementResponses:
      type: string
      enum:
        # 400
        - contentEmpty
        - audienceEmpty
        # 403
        - announcementEditingForbidden
        # 404
        - announcementDoesNotExist
        - announcementCategoriesDoesNotExist
        - attachmentsDoNotExist
        - pieceOfAudienceDoesNotExist
        # 409
        - delayedPublishingMomentIsInPast
        - delayedHidingMomentIsInPast
        - autoHidingAnAlreadyHiddenAnnouncement
        - autoPublishingPublishedAndNonHiddenAnnouncement
        - cannotDetachSurvey
      description: >
        Ответы:
          contentEmpty - Текстовое содержимое объявления пустое или состоит только из пробельных символов
          audienceEmpty - Аудитория пользователей пуста
          announcementEditingForbidden - Пользователь не имеет права изменить объявление
          announcementDoesNotExist - В качестве id объявления прикреплен несуществующий в базе id
          announcementCategoriesDoesNotExist - В качестве одного из id категорий объявлений прикреплен несуществующий в базе id
          attachmentsDoNotExist - В качестве одного или нескольких из id вложений прикреплен несуществующий в базе id
          pieceOfAudienceDoesNotExist - В качестве одного или нескольких из id пользователей прикреплен несуществующий в базе id
          delayedPublishingMomentIsInPast - Момент отложенной публикации уже наступил в прошлом
          delayedHidingMomentIsInPast - Момент отложенного сокрытия уже наступил в прошлом
          autoHidingAnAlreadyHiddenAnnouncement - Попытка задать срок автоматического сокрытия объявлению, которое уже скрыто
          autoPublishingPublishedAndNonHiddenAnnouncement - Попытка задать срок автоматической публикации объявлению, которое уже было опубликовано и в настоящий момент не является скрытым
          cannotDetachSurvey - Открепление опросов запрещено

    deleteAnnouncementResponses:
      type: string
      enum:
        # 403
        - announcementDeletionForbidden
        # 409
        - announcementDoesNotExist
      description: >
        Ответы:
          announcementDeletionForbidden - Пользователь не имеет права удалить объявление
          announcementDoesNotExist - Объявление не существует

    getPostedAnnouncementListResponses:
      type: string
      enum:
        # 403
        - postedAnnouncementsListAccessForbidden
      description: >
        Ответы:
          postedAnnouncementsListAccessForbidden - Пользователь не имеет права просматривать списки опубликованных объявлений

    hidePostedAnnouncementResponses:
      type: string
      enum:
        # 403
        - announcementHidingForbidden
        # 404
        - announcementDoesNotExist
        # 409
        - announcementAlreadyHidden
        - announcementNotYetPublished
      description: >
        Ответы:
          announcementHidingForbidden - Пользователь не имеет права скрыть объявление
          announcementDoesNotExist - Объявление не существует
          announcementAlreadyHidden - Объявление уже скрыто
          announcementNotYetPublished - Объявление еще не опубликовано

    getHiddenAnnouncementListResponses:
      type: string
      enum:
        # 403
        - hiddenAnnouncementsListAccessForbidden
      description: >
        Ответы:
          hiddenAnnouncementsListAccessForbidden - Пользователь не имеет права просматривать списки скрытых объявлений

    restoreHiddenAnnouncementResponses:
      type: string
      enum:
        # 403
        - restoreForbidden
        # 404
        - announcementDoesNotExist
        # 409
        - announcementNotHidden
      description: >
        Ответы:
          restoreForbidden - Пользователь не имеет права восстановить скрытое объявление
          announcementDoesNotExist - Объявление не существует
          announcementNotHidden - Объявление не является скрытым

    getDelayedPublishingAnnouncementListResponses:
      type: string
      enum:
        # 403
        - getDelayedPublishingAnnouncementListResponsesAccessForbidden
      description: >
        Ответы: 
          getDelayedPublishingAnnouncementListResponsesAccessForbidden - Пользователь не имеет права просматривать списки объявлений, ожидающих отложенное сокрытие

    publishImmediatelyDelayedAnnouncementResponses:
      type: string
      enum:
        # 403
        - immediatePublishingForbidden
        # 404
        - announcementDoesNotExist
      description: >
        Ответы: 
          immediatePublishingForbidden - Пользователь не имеет права незамедлительно опубликовать отложенное объявление
          announcementDoesNotExist - Объявление не существует

    getDelayedHiddenAnnouncementListResponses:
      type: string
      enum:
        # 403
        - getDelayedHiddenAnnouncementListAccessForbidden
      description: >
        Ответы: 
          getDelayedHiddenAnnouncementListAccessForbidden - Пользователь не имеет права просматривать списки объявлений, ожидающих отложенное сокрытие