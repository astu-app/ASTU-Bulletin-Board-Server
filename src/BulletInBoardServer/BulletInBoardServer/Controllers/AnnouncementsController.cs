//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 612 // Disable "CS0612 '...' is obsolete"
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"
#pragma warning disable 8603 // Disable "CS8603 Possible null reference return"
#pragma warning disable 8604 // Disable "CS8604 Possible null reference argument for parameter"
#pragma warning disable 8625 // Disable "CS8625 Cannot convert null literal to non-nullable reference type"

namespace BulletInBoardServer.Controllers
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public interface IAnnouncementsController
    {

        /// <summary>
        /// Создать объявление
        /// </summary>


        /// <returns>Created</returns>

        System.Threading.Tasks.Task<CreateAnnouncementCreated> CreateAnnouncementAsync(CreateAnnouncementDto body);

        /// <summary>
        /// Получить подробности о выбранном объявлении
        /// </summary>


        /// <returns>Ok</returns>

        System.Threading.Tasks.Task<GetAnnouncementDetailsOk> GetAnnouncementDetailsAsync(System.Guid body);

        /// <summary>
        /// Редактировать объявление
        /// </summary>


        /// <returns>Ok</returns>

        System.Threading.Tasks.Task<UpdateAnnouncementOk> UpdateAnnouncementAsync(UpdateAnnouncementDto body);

        /// <summary>
        /// Удалить объявление
        /// </summary>


        /// <returns>Ok</returns>

        System.Threading.Tasks.Task<DeleteAnnouncementOk> DeleteAnnouncementAsync(System.Guid body);

        /// <summary>
        /// Получить список опубликованных объявлений
        /// </summary>

        /// <returns>Ok</returns>

        System.Threading.Tasks.Task<GetPostedAnnouncementListOk> GetPostedAnnouncementListAsync();

        /// <summary>
        /// Скрыть опубликованное объявление
        /// </summary>


        /// <returns>Ok</returns>

        System.Threading.Tasks.Task<HidePostedAnnouncementOk> HidePostedAnnouncementAsync(System.Guid body);

        /// <summary>
        /// Получить список скрытых объявлений
        /// </summary>

        /// <returns>Ok</returns>

        System.Threading.Tasks.Task<GetHiddenAnnouncementListOk> GetHiddenAnnouncementListAsync();

        /// <summary>
        /// Восстановить скрытое объявление
        /// </summary>


        /// <returns>Ok</returns>

        System.Threading.Tasks.Task<RestoreHiddenAnnouncementOk> RestoreHiddenAnnouncementAsync(System.Guid? body);

        /// <summary>
        /// Получить список объявлений, ожидающих отложенную публикацию
        /// </summary>

        /// <returns>Ok</returns>

        System.Threading.Tasks.Task<GetDelayedPublishingAnnouncementListOk> GetDelayedPublishingAnnouncementListAsync();

        /// <summary>
        /// Сразу опубликовать отложенное объявление
        /// </summary>


        /// <returns>Ok</returns>

        System.Threading.Tasks.Task<PublishImmediatelyDelayedPublishingAnnouncementOk> PublishImmediatelyDelayedPublishingAnnouncementAsync(System.Guid? body);

        /// <summary>
        /// Получить список объявлений, ожидающих отложенное сокрытие
        /// </summary>

        /// <returns>Ok</returns>

        System.Threading.Tasks.Task<GetDelayedHiddenAnnouncementListOk> GetDelayedHiddenAnnouncementListAsync();

    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    [Microsoft.AspNetCore.Mvc.Route("api/")]

    public partial class AnnouncementsController : Microsoft.AspNetCore.Mvc.ControllerBase
    {
        private IAnnouncementsController _implementation;

        public AnnouncementsController(IAnnouncementsController implementation)
        {
            _implementation = implementation;
        }

        /// <summary>
        /// Создать объявление
        /// </summary>
        /// <returns>Created</returns>
        [Microsoft.AspNetCore.Mvc.HttpPost, Microsoft.AspNetCore.Mvc.Route("announcements/create", Name = "createAnnouncement")]
        public System.Threading.Tasks.Task<CreateAnnouncementCreated> CreateAnnouncement([Microsoft.AspNetCore.Mvc.FromBody] CreateAnnouncementDto body)
        {

            return _implementation.CreateAnnouncementAsync(body);
        }

        /// <summary>
        /// Получить подробности о выбранном объявлении
        /// </summary>
        /// <returns>Ok</returns>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("announcements/get-details", Name = "getAnnouncementDetails")]
        public System.Threading.Tasks.Task<GetAnnouncementDetailsOk> GetAnnouncementDetails([Microsoft.AspNetCore.Mvc.FromBody] System.Guid body)
        {

            return _implementation.GetAnnouncementDetailsAsync(body);
        }

        /// <summary>
        /// Редактировать объявление
        /// </summary>
        /// <returns>Ok</returns>
        [Microsoft.AspNetCore.Mvc.HttpPut, Microsoft.AspNetCore.Mvc.Route("announcements/update", Name = "updateAnnouncement")]
        public System.Threading.Tasks.Task<UpdateAnnouncementOk> UpdateAnnouncement([Microsoft.AspNetCore.Mvc.FromBody] UpdateAnnouncementDto body)
        {

            return _implementation.UpdateAnnouncementAsync(body);
        }

        /// <summary>
        /// Удалить объявление
        /// </summary>
        /// <returns>Ok</returns>
        [Microsoft.AspNetCore.Mvc.HttpDelete, Microsoft.AspNetCore.Mvc.Route("announcements/delete", Name = "deleteAnnouncement")]
        public System.Threading.Tasks.Task<DeleteAnnouncementOk> DeleteAnnouncement([Microsoft.AspNetCore.Mvc.FromBody] System.Guid body)
        {

            return _implementation.DeleteAnnouncementAsync(body);
        }

        /// <summary>
        /// Получить список опубликованных объявлений
        /// </summary>
        /// <returns>Ok</returns>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("announcements/published/get-list", Name = "getPostedAnnouncementList")]
        public System.Threading.Tasks.Task<GetPostedAnnouncementListOk> GetPostedAnnouncementList()
        {

            return _implementation.GetPostedAnnouncementListAsync();
        }

        /// <summary>
        /// Скрыть опубликованное объявление
        /// </summary>
        /// <returns>Ok</returns>
        [Microsoft.AspNetCore.Mvc.HttpPost, Microsoft.AspNetCore.Mvc.Route("announcements/published/hide", Name = "hidePostedAnnouncement")]
        public System.Threading.Tasks.Task<HidePostedAnnouncementOk> HidePostedAnnouncement([Microsoft.AspNetCore.Mvc.FromBody] System.Guid body)
        {

            return _implementation.HidePostedAnnouncementAsync(body);
        }

        /// <summary>
        /// Получить список скрытых объявлений
        /// </summary>
        /// <returns>Ok</returns>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("announcements/hidden/get-list", Name = "getHiddenAnnouncementList")]
        public System.Threading.Tasks.Task<GetHiddenAnnouncementListOk> GetHiddenAnnouncementList()
        {

            return _implementation.GetHiddenAnnouncementListAsync();
        }

        /// <summary>
        /// Восстановить скрытое объявление
        /// </summary>
        /// <returns>Ok</returns>
        [Microsoft.AspNetCore.Mvc.HttpPost, Microsoft.AspNetCore.Mvc.Route("announcements/hidden/restore", Name = "restoreHiddenAnnouncement")]
        public System.Threading.Tasks.Task<RestoreHiddenAnnouncementOk> RestoreHiddenAnnouncement([Microsoft.AspNetCore.Mvc.FromBody] System.Guid? body)
        {

            return _implementation.RestoreHiddenAnnouncementAsync(body);
        }

        /// <summary>
        /// Получить список объявлений, ожидающих отложенную публикацию
        /// </summary>
        /// <returns>Ok</returns>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("announcements/delayed-publishing/get-list", Name = "getDelayedPublishingAnnouncementList")]
        public System.Threading.Tasks.Task<GetDelayedPublishingAnnouncementListOk> GetDelayedPublishingAnnouncementList()
        {

            return _implementation.GetDelayedPublishingAnnouncementListAsync();
        }

        /// <summary>
        /// Сразу опубликовать отложенное объявление
        /// </summary>
        /// <returns>Ok</returns>
        [Microsoft.AspNetCore.Mvc.HttpPost, Microsoft.AspNetCore.Mvc.Route("announcements/delayed-publishing/publish-immediately", Name = "publishImmediatelyDelayedPublishingAnnouncement")]
        public System.Threading.Tasks.Task<PublishImmediatelyDelayedPublishingAnnouncementOk> PublishImmediatelyDelayedPublishingAnnouncement([Microsoft.AspNetCore.Mvc.FromBody] System.Guid? body)
        {

            return _implementation.PublishImmediatelyDelayedPublishingAnnouncementAsync(body);
        }

        /// <summary>
        /// Получить список объявлений, ожидающих отложенное сокрытие
        /// </summary>
        /// <returns>Ok</returns>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("announcements/delayed-hidden/get-list", Name = "getDelayedHiddenAnnouncementList")]
        public System.Threading.Tasks.Task<GetDelayedHiddenAnnouncementListOk> GetDelayedHiddenAnnouncementList()
        {

            return _implementation.GetDelayedHiddenAnnouncementListAsync();
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CreateAnnouncementDto
    {
        /// <summary>
        /// Текстовое содержимое объявления
        /// </summary>
        [Newtonsoft.Json.JsonProperty("content", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Content { get; set; }

        /// <summary>
        /// Идентификаторы пользователей, для которых создается объявление
        /// </summary>
        [Newtonsoft.Json.JsonProperty("userIds", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.MinLength(1)]
        public System.Collections.Generic.List<System.Guid> UserIds { get; set; }

        /// <summary>
        /// Идентификаторы категорий объявлений
        /// </summary>
        [Newtonsoft.Json.JsonProperty("categoryIds", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<System.Guid> CategoryIds { get; set; }

        /// <summary>
        /// Идентификаторы вложений, прикрепляемых к объявлению
        /// </summary>
        [Newtonsoft.Json.JsonProperty("attachmentIds", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.MinLength(1)]
        public System.Collections.Generic.List<System.Guid> AttachmentIds { get; set; }

        /// <summary>
        /// Срок отложенной публикации объявления
        /// </summary>
        [Newtonsoft.Json.JsonProperty("delayedPublishingAt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTime? DelayedPublishingAt { get; set; }

        /// <summary>
        /// Срок отложенного сокрытия объявления
        /// </summary>
        [Newtonsoft.Json.JsonProperty("delayedHidingAt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTime? DelayedHidingAt { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AnnouncementSummaryDto
    {
        /// <summary>
        /// Идентификатор объявления
        /// </summary>
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Id { get; set; }

        /// <summary>
        /// Автор объявления
        /// </summary>
        [Newtonsoft.Json.JsonProperty("author", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Author { get; set; }

        /// <summary>
        /// Текстовое содержимое объявления
        /// </summary>
        [Newtonsoft.Json.JsonProperty("content", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Content { get; set; }

        /// <summary>
        /// Время публикации объявления
        /// </summary>
        [Newtonsoft.Json.JsonProperty("publishedAt", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTime PublishedAt { get; set; }

        /// <summary>
        /// Количество просмотревших объявление пользователей
        /// </summary>
        [Newtonsoft.Json.JsonProperty("viewers", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0, int.MaxValue)]
        public int Viewers { get; set; }

        /// <summary>
        /// Размер аудитории объявления
        /// </summary>
        [Newtonsoft.Json.JsonProperty("audienceSize", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0, int.MaxValue)]
        public int AudienceSize { get; set; }

        /// <summary>
        /// Массив файлов, прикрепленных к объявлению
        /// </summary>
        [Newtonsoft.Json.JsonProperty("files", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<FileSummaryDto> Files { get; set; }

        [Newtonsoft.Json.JsonProperty("survey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SurveyDetailsDto Survey { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AnnouncementDetailsDto
    {
        /// <summary>
        /// Текстовое содержимое объявления
        /// </summary>
        [Newtonsoft.Json.JsonProperty("content", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Content { get; set; }

        /// <summary>
        /// Автор объявления
        /// </summary>
        [Newtonsoft.Json.JsonProperty("author", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Author { get; set; }

        /// <summary>
        /// Количество просмотревших объявление пользователей
        /// </summary>
        [Newtonsoft.Json.JsonProperty("viewers", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0, int.MaxValue)]
        public int Viewers { get; set; }

        /// <summary>
        /// Размер аудитории объявления
        /// </summary>
        [Newtonsoft.Json.JsonProperty("audienceSize", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.Range(0, int.MaxValue)]
        public int AudienceSize { get; set; }

        /// <summary>
        /// Массив категорий объявлений
        /// </summary>
        [Newtonsoft.Json.JsonProperty("categories", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<AnnouncementCategoryDetailsDto> Categories { get; set; }

        /// <summary>
        /// Массив файлов, прикрепленных к объявлению
        /// </summary>
        [Newtonsoft.Json.JsonProperty("files", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<FileSummaryDto> Files { get; set; }

        [Newtonsoft.Json.JsonProperty("survey", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public SurveyDetailsDto Survey { get; set; }

        /// <summary>
        /// Момент сокрытия объявления. Объявление не является скрытым, если null
        /// </summary>
        [Newtonsoft.Json.JsonProperty("hiddenAt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTime? HiddenAt { get; set; }

        /// <summary>
        /// Срок автоматического сокрытия объявления. Объявление не будет скрыто автоматически, если null
        /// </summary>
        [Newtonsoft.Json.JsonProperty("hideAt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTime? HideAt { get; set; }

        /// <summary>
        /// Срок отложенной публикации объявления. Объявление не будет опубликовано автоматически, если null
        /// </summary>
        [Newtonsoft.Json.JsonProperty("publishAt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTime? PublishAt { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class UpdateAnnouncementDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required(AllowEmptyStrings = true)]
        public System.Guid Id { get; set; }

        /// <summary>
        /// Текстовое содержимое объявления
        /// </summary>
        [Newtonsoft.Json.JsonProperty("content", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Content { get; set; }

        /// <summary>
        /// Массив идентификаторов категорий объявлений
        /// </summary>
        [Newtonsoft.Json.JsonProperty("categoryIds", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<System.Guid> CategoryIds { get; set; }

        /// <summary>
        /// Идентификаторы групп пользователей, для которых создается объявление
        /// </summary>
        [Newtonsoft.Json.JsonProperty("userGroupIds", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.MinLength(1)]
        public System.Collections.Generic.List<System.Guid> UserGroupIds { get; set; }

        /// <summary>
        /// Идентификатор опроса, прикрепляемого к объявлению
        /// </summary>
        [Newtonsoft.Json.JsonProperty("surveyId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid? SurveyId { get; set; }

        /// <summary>
        /// Идентификаторы файлов, прикрепляемых к объявлению
        /// </summary>
        [Newtonsoft.Json.JsonProperty("fileIds", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<System.Guid> FileIds { get; set; }

        /// <summary>
        /// Срок автоматического сокрытия объявления
        /// </summary>
        [Newtonsoft.Json.JsonProperty("hideAt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTime? HideAt { get; set; }

        /// <summary>
        /// Срок отложенной публикации объявления
        /// </summary>
        [Newtonsoft.Json.JsonProperty("publishAt", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.DateTime? PublishAt { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    /// <summary>
    /// Ответы:
    /// <br/>  created - Объявление создано
    /// <br/>  usergroupListNullOrEmpty - Список групп пользователей null или пустой
    /// <br/>  unauthorized - Пользователь не авторизован для выполнения операции
    /// <br/>  announcementCreationForbidden - Пользователь не имеет права создать объявление
    /// <br/>  announcementCategoriesDoNotExist - В качестве одного или нескольких из id категорий объявлений прикреплен несуществующий в базе id
    /// <br/>  filesDoNotExist - В качестве одного или нескольких из id файлов прикреплен несуществующий в базе id
    /// <br/>  surveyDoesNotExist - В качестве id опроса прикреплен несуществующий в базе id
    /// <br/>  attachingFilesAndSurveyTogether - Нельзя прикрепить к объявлению и файлы, и опрос
    /// <br/>  automaticPublishMomentIsInPast - Момент отложенной публикации уже наступил в прошлом
    /// <br/>  automaticHideMomentIsInPast - Момент автоматического сокрытия уже наступил в прошлом
    /// <br/>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum CreateAnnouncementResponses
    {

        [System.Runtime.Serialization.EnumMember(Value = @"created")]
        Created = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"usergroupListNullOrEmpty")]
        UsergroupListNullOrEmpty = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"unauthorized")]
        Unauthorized = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"announcementCreationForbidden")]
        AnnouncementCreationForbidden = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"announcementCategoriesDoNotExist")]
        AnnouncementCategoriesDoNotExist = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"filesDoNotExist")]
        FilesDoNotExist = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"surveyDoesNotExist")]
        SurveyDoesNotExist = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"attachingFilesAndSurveyTogether")]
        AttachingFilesAndSurveyTogether = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"automaticPublishMomentIsInPast")]
        AutomaticPublishMomentIsInPast = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"automaticHideMomentIsInPast")]
        AutomaticHideMomentIsInPast = 9,

    }

    /// <summary>
    /// Ответы:
    /// <br/>  ok - Ок
    /// <br/>  incorrectIdentifierFormat - Некорректный формат идентификатора 
    /// <br/>  unauthorized - Пользователь не авторизован для выполнения операции
    /// <br/>  detailsAccessForbidden - Пользователь не имеет права просмотреть подробности объявления
    /// <br/>  announcementDoesNotExist - Объявление не существует
    /// <br/>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum GetAnnouncementDetailsResponses
    {

        [System.Runtime.Serialization.EnumMember(Value = @"ok")]
        Ok = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"incorrectIdentifierFormat")]
        IncorrectIdentifierFormat = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"unauthorized")]
        Unauthorized = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"detailsAccessForbidden")]
        DetailsAccessForbidden = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"announcementDoesNotExist")]
        AnnouncementDoesNotExist = 4,

    }

    /// <summary>
    /// Ответы:
    /// <br/>  ok - Ок
    /// <br/>  usergroupListNullOrEmpty - Список групп пользователей null или пустой
    /// <br/>  incorrectIdentifierFormat - Некорректный формат идентификатора
    /// <br/>  unauthorized - Пользователь не авторизован для выполнения операции
    /// <br/>  announcementEditingForbidden - Пользователь не имеет права изменить объявление
    /// <br/>  announcementDoesNotExist - В качестве id объявления прикреплен несуществующий в базе id
    /// <br/>  announcementCategoryDoesNotExist - В качестве одного из id категорий объявлений прикреплен несуществующий в базе id
    /// <br/>  fileDoesNotExist - В качестве одного из id файлов прикреплен несуществующий в базе id
    /// <br/>  surveyDoesNotExist - В качестве id опроса прикреплен несуществующий в базе id
    /// <br/>  attachingFilesAndSurveyTogether - Нельзя прикрепить к объявлению и файлы, и опрос
    /// <br/>  automaticPublishMomentIsInPast - Момент отложенной публикации уже наступил в прошлом
    /// <br/>  automaticHideMomentIsInPast - Момент автоматического сокрытия уже наступил в прошлом
    /// <br/>  autoHidingAnAlreadyHiddenAnnouncement - Попытка задать срок автоматического сокрытия объявлению, которое уже скрыто
    /// <br/>  autoPublishingPublishedAndNonHiddenAnnouncement - Попытка задать срок автоматической публикации объявлению, которое уже было опубликовано и в настоящий момент не является скрытым
    /// <br/>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum UpdateAnnouncementResponses
    {

        [System.Runtime.Serialization.EnumMember(Value = @"ok")]
        Ok = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"usergroupListNullOrEmpty")]
        UsergroupListNullOrEmpty = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"incorrectIdentifierFormat")]
        IncorrectIdentifierFormat = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"unauthorized")]
        Unauthorized = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"announcementEditingForbidden")]
        AnnouncementEditingForbidden = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"announcementDoesNotExist")]
        AnnouncementDoesNotExist = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"announcementCategoryDoesNotExist")]
        AnnouncementCategoryDoesNotExist = 6,

        [System.Runtime.Serialization.EnumMember(Value = @"fileDoesNotExist")]
        FileDoesNotExist = 7,

        [System.Runtime.Serialization.EnumMember(Value = @"surveyDoesNotExist")]
        SurveyDoesNotExist = 8,

        [System.Runtime.Serialization.EnumMember(Value = @"attachingFilesAndSurveyTogether")]
        AttachingFilesAndSurveyTogether = 9,

        [System.Runtime.Serialization.EnumMember(Value = @"automaticPublishMomentIsInPast")]
        AutomaticPublishMomentIsInPast = 10,

        [System.Runtime.Serialization.EnumMember(Value = @"automaticHideMomentIsInPast")]
        AutomaticHideMomentIsInPast = 11,

        [System.Runtime.Serialization.EnumMember(Value = @"autoHidingAnAlreadyHiddenAnnouncement")]
        AutoHidingAnAlreadyHiddenAnnouncement = 12,

        [System.Runtime.Serialization.EnumMember(Value = @"autoPublishingPublishedAndNonHiddenAnnouncement")]
        AutoPublishingPublishedAndNonHiddenAnnouncement = 13,

    }

    /// <summary>
    /// Ответы:
    /// <br/>  ok - Ок
    /// <br/>  incorrectIdentifierFormat - Некорректный формат идентификатора
    /// <br/>  unauthorized - Пользователь не авторизован для выполнения операции
    /// <br/>  announcementDeletionForbidden - Пользователь не имеет права удалить объявление
    /// <br/>  announcementDoesNotExist - Объявление не существует
    /// <br/>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum DeleteAnnouncementResponses
    {

        [System.Runtime.Serialization.EnumMember(Value = @"ok")]
        Ok = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"incorrectIdentifierFormat")]
        IncorrectIdentifierFormat = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"unauthorized")]
        Unauthorized = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"announcementDeletionForbidden")]
        AnnouncementDeletionForbidden = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"announcementDoesNotExist")]
        AnnouncementDoesNotExist = 4,

    }

    /// <summary>
    /// Ответы:
    /// <br/>  ok - Ок
    /// <br/>  unauthorized - Пользователь не авторизован для выполнения операции
    /// <br/>  postedAnnouncementsListAccessForbidden - Пользователь не имеет права просматривать списки опубликованных объявлений
    /// <br/>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum GetPostedAnnouncementListResponses
    {

        [System.Runtime.Serialization.EnumMember(Value = @"ok")]
        Ok = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"unauthorized")]
        Unauthorized = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"postedAnnouncementsListAccessForbidden")]
        PostedAnnouncementsListAccessForbidden = 2,

    }

    /// <summary>
    /// Ответы:
    /// <br/>  ok - Ок
    /// <br/>  incorrectIdentifierFormat - Некорректный формат идентификатора 
    /// <br/>  unauthorized - Пользователь не авторизован для выполнения операции
    /// <br/>  announcementHidingForbidden - Пользователь не имеет права скрыть объявление
    /// <br/>  announcementDoesNotExist - Объявление не существует
    /// <br/>  announcementAlreadyHidden - Объявление уже скрыто
    /// <br/>  announcementNotYetPublished - Объявление еще не опубликовано
    /// <br/>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum HidePostedAnnouncementResponses
    {

        [System.Runtime.Serialization.EnumMember(Value = @"ok")]
        Ok = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"incorrectIdentifierFormat")]
        IncorrectIdentifierFormat = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"unauthorized")]
        Unauthorized = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"announcementHidingForbidden")]
        AnnouncementHidingForbidden = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"announcementDoesNotExist")]
        AnnouncementDoesNotExist = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"announcementAlreadyHidden")]
        AnnouncementAlreadyHidden = 5,

        [System.Runtime.Serialization.EnumMember(Value = @"announcementNotYetPublished")]
        AnnouncementNotYetPublished = 6,

    }

    /// <summary>
    /// Ответы:
    /// <br/>  ok - Ок
    /// <br/>  unauthorized - Пользователь не авторизован для выполнения операции
    /// <br/>  hiddenAnnouncementsListAccessForbidden - Пользователь не имеет права просматривать списки скрытых объявлений
    /// <br/>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum GetHiddenAnnouncementListResponses
    {

        [System.Runtime.Serialization.EnumMember(Value = @"ok")]
        Ok = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"unauthorized")]
        Unauthorized = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"hiddenAnnouncementsListAccessForbidden")]
        HiddenAnnouncementsListAccessForbidden = 2,

    }

    /// <summary>
    /// Ответы:
    /// <br/>  ok - Ок
    /// <br/>  incorrectIdentifierFormat - Некорректный формат идентификатора
    /// <br/>  unauthorized - Пользователь не авторизован для выполнения операции
    /// <br/>  unhideForbidden - Пользователь не имеет права скрыть объявление
    /// <br/>  announcementDoesNotExist - Объявление не существует
    /// <br/>  announcementNotHidden - Объявление не является скрытым
    /// <br/>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum UnhideHiddenAnnouncementResponses
    {

        [System.Runtime.Serialization.EnumMember(Value = @"ok")]
        Ok = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"incorrectIdentifierFormat")]
        IncorrectIdentifierFormat = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"unauthorized")]
        Unauthorized = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"unhideForbidden")]
        UnhideForbidden = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"announcementDoesNotExist")]
        AnnouncementDoesNotExist = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"announcementNotHidden")]
        AnnouncementNotHidden = 5,

    }

    /// <summary>
    /// Ответы: 
    /// <br/>  ok - Ок
    /// <br/>  unauthorized - Пользователь не авторизован для выполнения операции
    /// <br/>  getDelayedPublishingAnnouncementListResponsesAccessForbidden - Пользователь не имеет права просматривать списки объявлений, ожидающих отложенное сокрытие
    /// <br/>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum GetDelayedPublishingAnnouncementListResponses
    {

        [System.Runtime.Serialization.EnumMember(Value = @"ok")]
        Ok = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"unauthorized")]
        Unauthorized = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"getDelayedPublishingAnnouncementListResponsesAccessForbidden")]
        GetDelayedPublishingAnnouncementListResponsesAccessForbidden = 2,

    }

    /// <summary>
    /// Ответы: 
    /// <br/>  ok - Ок
    /// <br/>  incorrectIdentifierFormat - Некорректный формат идентификатора
    /// <br/>  unauthorized - Пользователь не авторизован для выполнения операции
    /// <br/>  immediatePublishingForbidden - Пользователь не имеет права незамедлительно опубликовать отложенное объявление
    /// <br/>  announcementDoesNotExist - Объявление не существует
    /// <br/>  announcementNotDelayed - Объявление не является отложенным
    /// <br/>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum PublishImmediatelyDelayedAnnouncementResponses
    {

        [System.Runtime.Serialization.EnumMember(Value = @"ok")]
        Ok = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"incorrectIdentifierFormat")]
        IncorrectIdentifierFormat = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"unauthorized")]
        Unauthorized = 2,

        [System.Runtime.Serialization.EnumMember(Value = @"immediatePublishingForbidden")]
        ImmediatePublishingForbidden = 3,

        [System.Runtime.Serialization.EnumMember(Value = @"announcementDoesNotExist")]
        AnnouncementDoesNotExist = 4,

        [System.Runtime.Serialization.EnumMember(Value = @"announcementNotDelayed")]
        AnnouncementNotDelayed = 5,

    }

    /// <summary>
    /// Ответы: 
    /// <br/>  ok - Ок
    /// <br/>  unauthorized - Пользователь не авторизован для выполнения операции
    /// <br/>  getDelayedHiddenAnnouncementListAccessForbidden - Пользователь не имеет права просматривать списки объявлений, ожидающих отложенное сокрытие
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum GetDelayedHiddenAnnouncementListResponses
    {

        [System.Runtime.Serialization.EnumMember(Value = @"ok")]
        Ok = 0,

        [System.Runtime.Serialization.EnumMember(Value = @"unauthorized")]
        Unauthorized = 1,

        [System.Runtime.Serialization.EnumMember(Value = @"getDelayedHiddenAnnouncementListAccessForbidden")]
        GetDelayedHiddenAnnouncementListAccessForbidden = 2,

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class AnnouncementCategoryDetailsDto
    {
        [Newtonsoft.Json.JsonProperty("id", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Id { get; set; }

        [Newtonsoft.Json.JsonProperty("name", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Name { get; set; }

        [Newtonsoft.Json.JsonProperty("color", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Color { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class CreateAnnouncementCreated
    {
        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public CreateAnnouncementResponses Code { get; set; }

        [Newtonsoft.Json.JsonProperty("content", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Guid Content { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetAnnouncementDetailsOk
    {
        [Newtonsoft.Json.JsonProperty("content", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public AnnouncementDetailsDto Content { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public GetAnnouncementDetailsResponses Code { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class UpdateAnnouncementOk
    {
        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public UpdateAnnouncementResponses Code { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class DeleteAnnouncementOk
    {
        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public DeleteAnnouncementResponses Code { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetPostedAnnouncementListOk
    {
        [Newtonsoft.Json.JsonProperty("content", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<AnnouncementSummaryDto> Content { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public GetPostedAnnouncementListResponses Code { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class HidePostedAnnouncementOk
    {
        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public HidePostedAnnouncementResponses Code { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetHiddenAnnouncementListOk
    {
        [Newtonsoft.Json.JsonProperty("content", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<AnnouncementSummaryDto> Content { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public GetHiddenAnnouncementListResponses Code { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class RestoreHiddenAnnouncementOk
    {
        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public UnhideHiddenAnnouncementResponses Code { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetDelayedPublishingAnnouncementListOk
    {
        [Newtonsoft.Json.JsonProperty("content", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<AnnouncementSummaryDto> Content { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public GetDelayedPublishingAnnouncementListResponses Code { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class PublishImmediatelyDelayedPublishingAnnouncementOk
    {
        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public PublishImmediatelyDelayedAnnouncementResponses Code { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "14.0.3.0 (NJsonSchema v11.0.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class GetDelayedHiddenAnnouncementListOk
    {
        [Newtonsoft.Json.JsonProperty("content", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.Generic.List<AnnouncementSummaryDto> Content { get; set; }

        [Newtonsoft.Json.JsonProperty("code", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public GetDelayedHiddenAnnouncementListResponses Code { get; set; }

        private System.Collections.Generic.IDictionary<string, object> _additionalProperties;

        [Newtonsoft.Json.JsonExtensionData]
        public System.Collections.Generic.IDictionary<string, object> AdditionalProperties
        {
            get { return _additionalProperties ?? (_additionalProperties = new System.Collections.Generic.Dictionary<string, object>()); }
            set { _additionalProperties = value; }
        }

    }


}

#pragma warning restore  108
#pragma warning restore  114
#pragma warning restore  472
#pragma warning restore  612
#pragma warning restore 1573
#pragma warning restore 1591
#pragma warning restore 8073
#pragma warning restore 3016
#pragma warning restore 8603
#pragma warning restore 8604
#pragma warning restore 8625