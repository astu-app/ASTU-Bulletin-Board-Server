/*
 * API Шлюз. Категории объявлений
 *
 * API Шлюза для управления категориями объявлений
 *
 * The version of the OpenAPI document: 0.0.2
 *
 * Generated by: https://openapi-generator.tech
 */

using System;
using BulletInBoardServer.Controllers.CategoriesController.Attributes;
using BulletInBoardServer.Controllers.CategoriesController.Models;
using Microsoft.AspNetCore.Mvc;

namespace BulletInBoardServer.Controllers.CategoriesController.Controllers
{ 
    /// <summary>
    /// Базовый класс контроллера категорий объявлений
    /// </summary>
    [ApiController]
    public abstract class AnnouncementCategoriesApiController : ControllerBase
    { 
        /// <summary>
        /// Создать категорию объявлений
        /// </summary>
        /// <param name="createAnnouncementCategoryDto"></param>
        /// <response code="201">Created</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="500">Internal Server Error</response>
        [HttpPost]
        [Route("/api/announcement-categories/create")]
        [Consumes("application/json")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 201, type: typeof(CreateAnnouncementCategoryCreated))]
        [ProducesResponseType(statusCode: 400, type: typeof(CreateAnnouncementCategoryBadRequest))]
        [ProducesResponseType(statusCode: 403, type: typeof(CreateAnnouncementCategoryForbidden))]
        public abstract IActionResult CreateAnnouncementCategory([FromBody]CreateAnnouncementCategoryDto createAnnouncementCategoryDto);

        /// <summary>
        /// Удалить категорию объявлений
        /// </summary>
        /// <param name="body"></param>
        /// <response code="200">Ok</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        /// <response code="500">Internal Server Error</response>
        [HttpDelete]
        [Route("/api/announcement-categories/delete")]
        [Consumes("application/json")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 403, type: typeof(DeleteAnnouncementCategoryForbidden))]
        [ProducesResponseType(statusCode: 404, type: typeof(DeleteAnnouncementCategoryNotFound))]
        public abstract IActionResult DeleteAnnouncementCategory([FromBody]Guid body);

        /// <summary>
        /// Получить список всех категорий объявлений
        /// </summary>
        /// <response code="200">Ok</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="500">Internal Server Error</response>
        [HttpGet]
        [Route("/api/announcement-categories/get-list")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 200, type: typeof(GetAllAnnouncementCategoriesOk))]
        [ProducesResponseType(statusCode: 403, type: typeof(GetAllAnnouncementCategoriesForbidden))]
        public abstract IActionResult GetAllAnnouncementCategories();

        /// <summary>
        /// Редактировать категорию объявлений
        /// </summary>
        /// <param name="updateAnnouncementCategoryDto"></param>
        /// <response code="200">Ok</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        /// <response code="500">Internal Server Error</response>
        [HttpPut]
        [Route("/api/announcement-categories/update")]
        [Consumes("application/json")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 400, type: typeof(CreateAnnouncementCategoryBadRequest1))]
        [ProducesResponseType(statusCode: 403, type: typeof(UpdateAnnouncementCategoryForbidden))]
        [ProducesResponseType(statusCode: 404, type: typeof(UpdateAnnouncementCategoryNotFound))]
        public abstract IActionResult UpdateAnnouncementCategory([FromBody]UpdateAnnouncementCategoryDto updateAnnouncementCategoryDto);

        /// <summary>
        /// Получить список всех категорий объявлений с отмеченными подписками для текущего пользователя
        /// </summary>
        /// <response code="200">Ok</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="500">Internal Server Error</response>
        [HttpGet]
        [Route("/api/announcement-categories/get-subscriptions")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 403, type: typeof(GetAnnouncementCategoriesSubscriptionsForbidden))]
        public abstract IActionResult GetAnnouncementCategoriesSubscriptions();

        /// <summary>
        /// Обновить список подписок текущего пользователя
        /// </summary>
        /// <param name="updateAnnouncementCategoriesSubscriptionsDto"></param>
        /// <response code="200">Ok</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        /// <response code="500">Internal Server Error</response>
        [HttpPost]
        [Route("/api/announcement-categories/update-subscriptions")]
        [Consumes("application/json")]
        [ValidateModelState]
        [ProducesResponseType(statusCode: 403, type: typeof(UpdateAnnouncementCategoriesSubscriptionsForbidden))]
        [ProducesResponseType(statusCode: 404, type: typeof(UpdateAnnouncementCategoriesSubscriptionsNotFound))]
        public abstract IActionResult UpdateAnnouncementCategoriesSubscriptions([FromBody]UpdateAnnouncementCategoriesSubscriptionsDto updateAnnouncementCategoriesSubscriptionsDto);
    }
}
