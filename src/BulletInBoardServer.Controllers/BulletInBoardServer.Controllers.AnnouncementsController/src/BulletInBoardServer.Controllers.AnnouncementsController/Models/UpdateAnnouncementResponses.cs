/*
 * API Шлюз. Объявления
 *
 * API шлюза для управления объявлениями
 *
 * The version of the OpenAPI document: 0.0.2
 *
 * Generated by: https://openapi-generator.tech
 */

using System.ComponentModel;
using System.Runtime.Serialization;
using BulletInBoardServer.Controllers.AnnouncementsController.Converters;
using Newtonsoft.Json;

namespace BulletInBoardServer.Controllers.AnnouncementsController.Models
{ 
        /// <summary>
        /// Ответы:   ok - Ок   usergroupListNullOrEmpty - Список групп пользователей null или пустой   incorrectIdentifierFormat - Некорректный формат идентификатора   unauthorized - Пользователь не авторизован для выполнения операции   announcementEditingForbidden - Пользователь не имеет права изменить объявление   announcementDoesNotExist - В качестве id объявления прикреплен несуществующий в базе id   announcementCategoryDoesNotExist - В качестве одного из id категорий объявлений прикреплен несуществующий в базе id   fileDoesNotExist - В качестве одного из id файлов прикреплен несуществующий в базе id   surveyDoesNotExist - В качестве id опроса прикреплен несуществующий в базе id   attachingFilesAndSurveyTogether - Нельзя прикрепить к объявлению и файлы, и опрос   automaticPublishMomentIsInPast - Момент отложенной публикации уже наступил в прошлом   automaticHideMomentIsInPast - Момент автоматического сокрытия уже наступил в прошлом   autoHidingAnAlreadyHiddenAnnouncement - Попытка задать срок автоматического сокрытия объявлению, которое уже скрыто   autoPublishingPublishedAndNonHiddenAnnouncement - Попытка задать срок автоматической публикации объявлению, которое уже было опубликовано и в настоящий момент не является скрытым 
        /// </summary>
        /// <value>Ответы:   ok - Ок   usergroupListNullOrEmpty - Список групп пользователей null или пустой   incorrectIdentifierFormat - Некорректный формат идентификатора   unauthorized - Пользователь не авторизован для выполнения операции   announcementEditingForbidden - Пользователь не имеет права изменить объявление   announcementDoesNotExist - В качестве id объявления прикреплен несуществующий в базе id   announcementCategoryDoesNotExist - В качестве одного из id категорий объявлений прикреплен несуществующий в базе id   fileDoesNotExist - В качестве одного из id файлов прикреплен несуществующий в базе id   surveyDoesNotExist - В качестве id опроса прикреплен несуществующий в базе id   attachingFilesAndSurveyTogether - Нельзя прикрепить к объявлению и файлы, и опрос   automaticPublishMomentIsInPast - Момент отложенной публикации уже наступил в прошлом   automaticHideMomentIsInPast - Момент автоматического сокрытия уже наступил в прошлом   autoHidingAnAlreadyHiddenAnnouncement - Попытка задать срок автоматического сокрытия объявлению, которое уже скрыто   autoPublishingPublishedAndNonHiddenAnnouncement - Попытка задать срок автоматической публикации объявлению, которое уже было опубликовано и в настоящий момент не является скрытым </value>
        [TypeConverter(typeof(CustomEnumConverter<UpdateAnnouncementResponses>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum UpdateAnnouncementResponses
        {
            
            /// <summary>
            /// Enum Ok for ok
            /// </summary>
            [EnumMember(Value = "ok")]
            Ok = 1,
            
            /// <summary>
            /// Enum UsergroupListNullOrEmpty for usergroupListNullOrEmpty
            /// </summary>
            [EnumMember(Value = "usergroupListNullOrEmpty")]
            UsergroupListNullOrEmpty = 2,
            
            /// <summary>
            /// Enum IncorrectIdentifierFormat for incorrectIdentifierFormat
            /// </summary>
            [EnumMember(Value = "incorrectIdentifierFormat")]
            IncorrectIdentifierFormat = 3,
            
            /// <summary>
            /// Enum AnnouncementEditingForbidden for announcementEditingForbidden
            /// </summary>
            [EnumMember(Value = "announcementEditingForbidden")]
            AnnouncementEditingForbidden = 4,
            
            /// <summary>
            /// Enum AnnouncementDoesNotExist for announcementDoesNotExist
            /// </summary>
            [EnumMember(Value = "announcementDoesNotExist")]
            AnnouncementDoesNotExist = 5,
            
            /// <summary>
            /// Enum AnnouncementCategoryDoesNotExist for announcementCategoryDoesNotExist
            /// </summary>
            [EnumMember(Value = "announcementCategoryDoesNotExist")]
            AnnouncementCategoryDoesNotExist = 6,
            
            /// <summary>
            /// Enum FileDoesNotExist for fileDoesNotExist
            /// </summary>
            [EnumMember(Value = "fileDoesNotExist")]
            FileDoesNotExist = 7,
            
            /// <summary>
            /// Enum SurveyDoesNotExist for surveyDoesNotExist
            /// </summary>
            [EnumMember(Value = "surveyDoesNotExist")]
            SurveyDoesNotExist = 8,
            
            /// <summary>
            /// Enum AttachingFilesAndSurveyTogether for attachingFilesAndSurveyTogether
            /// </summary>
            [EnumMember(Value = "attachingFilesAndSurveyTogether")]
            AttachingFilesAndSurveyTogether = 9,
            
            /// <summary>
            /// Enum AutomaticPublishMomentIsInPast for automaticPublishMomentIsInPast
            /// </summary>
            [EnumMember(Value = "automaticPublishMomentIsInPast")]
            AutomaticPublishMomentIsInPast = 10,
            
            /// <summary>
            /// Enum AutomaticHideMomentIsInPast for automaticHideMomentIsInPast
            /// </summary>
            [EnumMember(Value = "automaticHideMomentIsInPast")]
            AutomaticHideMomentIsInPast = 11,
            
            /// <summary>
            /// Enum AutoHidingAnAlreadyHiddenAnnouncement for autoHidingAnAlreadyHiddenAnnouncement
            /// </summary>
            [EnumMember(Value = "autoHidingAnAlreadyHiddenAnnouncement")]
            AutoHidingAnAlreadyHiddenAnnouncement = 12,
            
            /// <summary>
            /// Enum AutoPublishingPublishedAndNonHiddenAnnouncement for autoPublishingPublishedAndNonHiddenAnnouncement
            /// </summary>
            [EnumMember(Value = "autoPublishingPublishedAndNonHiddenAnnouncement")]
            AutoPublishingPublishedAndNonHiddenAnnouncement = 13
        }
}
