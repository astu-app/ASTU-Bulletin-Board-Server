/*
 * API Шлюз. Объявления
 *
 * API шлюза для управления объявлениями
 *
 * The version of the OpenAPI document: 0.0.3
 *
 * Generated by: https://openapi-generator.tech
 */

using System.ComponentModel;
using System.Runtime.Serialization;
using BulletInBoardServer.Controllers.AnnouncementsController.Converters;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace BulletInBoardServer.Controllers.AnnouncementsController.Models
{ 
        /// <summary>
        /// Ответы:   audienceNullOrEmpty - Список аудитории null или пустой   contentNullOrEmpty - Текстовое содержимое объявления является null, пустым или состоит только из пробельных символов   announcementCreationForbidden - Пользователь не имеет права создать объявление   announcementCategoriesDoNotExist - В качестве одного или нескольких из id категорий объявлений прикреплен несуществующий в базе id   attachmentsDoNotExist - В качестве одного или нескольких из id вложений прикреплен несуществующий в базе id   pieceOfAudienceDoesNotExist - В качестве одного или нескольких из id пользователей прикреплен несуществующий в базе id   delayedPublishingMomentIsInPast - Момент отложенной публикации уже наступил в прошлом   delayedHidingMomentIsInPast - Момент автоматического сокрытия уже наступил в прошлом   delayedPublishingMomentAfterDelayedHidingMoment - Момент отложенной публикации наступит после момента отложенного сокрытия 
        /// </summary>
        /// <value>Ответы:   audienceNullOrEmpty - Список аудитории null или пустой   contentNullOrEmpty - Текстовое содержимое объявления является null, пустым или состоит только из пробельных символов   announcementCreationForbidden - Пользователь не имеет права создать объявление   announcementCategoriesDoNotExist - В качестве одного или нескольких из id категорий объявлений прикреплен несуществующий в базе id   attachmentsDoNotExist - В качестве одного или нескольких из id вложений прикреплен несуществующий в базе id   pieceOfAudienceDoesNotExist - В качестве одного или нескольких из id пользователей прикреплен несуществующий в базе id   delayedPublishingMomentIsInPast - Момент отложенной публикации уже наступил в прошлом   delayedHidingMomentIsInPast - Момент автоматического сокрытия уже наступил в прошлом   delayedPublishingMomentAfterDelayedHidingMoment - Момент отложенной публикации наступит после момента отложенного сокрытия </value>
        [TypeConverter(typeof(CustomEnumConverter<CreateAnnouncementResponses>))]
        [JsonConverter(typeof(StringEnumConverter))]
        public enum CreateAnnouncementResponses
        {
            
            /// <summary>
            /// Enum AudienceNullOrEmpty for audienceNullOrEmpty
            /// </summary>
            [EnumMember(Value = "audienceNullOrEmpty")]
            AudienceNullOrEmpty = 1,
            
            /// <summary>
            /// Enum ContentNullOrEmpty for contentNullOrEmpty
            /// </summary>
            [EnumMember(Value = "contentNullOrEmpty")]
            ContentNullOrEmpty = 2,
            
            /// <summary>
            /// Enum AnnouncementCreationForbidden for announcementCreationForbidden
            /// </summary>
            [EnumMember(Value = "announcementCreationForbidden")]
            AnnouncementCreationForbidden = 3,
            
            /// <summary>
            /// Enum AnnouncementCategoriesDoNotExist for announcementCategoriesDoNotExist
            /// </summary>
            [EnumMember(Value = "announcementCategoriesDoNotExist")]
            AnnouncementCategoriesDoNotExist = 4,
            
            /// <summary>
            /// Enum AttachmentsDoNotExist for attachmentsDoNotExist
            /// </summary>
            [EnumMember(Value = "attachmentsDoNotExist")]
            AttachmentsDoNotExist = 5,
            
            /// <summary>
            /// Enum PieceOfAudienceDoesNotExist for pieceOfAudienceDoesNotExist
            /// </summary>
            [EnumMember(Value = "pieceOfAudienceDoesNotExist")]
            PieceOfAudienceDoesNotExist = 6,
            
            /// <summary>
            /// Enum DelayedPublishingMomentIsInPast for delayedPublishingMomentIsInPast
            /// </summary>
            [EnumMember(Value = "delayedPublishingMomentIsInPast")]
            DelayedPublishingMomentIsInPast = 7,
            
            /// <summary>
            /// Enum DelayedHidingMomentIsInPast for delayedHidingMomentIsInPast
            /// </summary>
            [EnumMember(Value = "delayedHidingMomentIsInPast")]
            DelayedHidingMomentIsInPast = 8,
            
            /// <summary>
            /// Enum DelayedPublishingMomentAfterDelayedHidingMoment for delayedPublishingMomentAfterDelayedHidingMoment
            /// </summary>
            [EnumMember(Value = "delayedPublishingMomentAfterDelayedHidingMoment")]
            DelayedPublishingMomentAfterDelayedHidingMoment = 9
        }
}
