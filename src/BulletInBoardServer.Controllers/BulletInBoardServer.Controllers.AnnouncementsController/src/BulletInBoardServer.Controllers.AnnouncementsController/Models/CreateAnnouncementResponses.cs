/*
 * API Шлюз. Объявления
 *
 * API шлюза для управления объявлениями
 *
 * The version of the OpenAPI document: 0.0.2
 *
 * Generated by: https://openapi-generator.tech
 */

using System.ComponentModel;
using System.Runtime.Serialization;
using BulletInBoardServer.Controllers.AnnouncementsController.Converters;
using Newtonsoft.Json;

namespace BulletInBoardServer.Controllers.AnnouncementsController.Models
{ 
        /// <summary>
        /// Ответы:   created - Объявление создано   audience - Список аудитории null или пустой   announcementCreationForbidden - Пользователь не имеет права создать объявление   announcementCategoriesDoNotExist - В качестве одного или нескольких из id категорий объявлений прикреплен несуществующий в базе id   filesDoNotExist - В качестве одного или нескольких из id файлов прикреплен несуществующий в базе id   surveysDoNotExist - В качестве одного или нескольких из id опросов прикреплен несуществующий в базе id   delayedPublishingMomentIsInPast - Момент отложенной публикации уже наступил в прошлом   delayedHidingMomentIsInPast - Момент автоматического сокрытия уже наступил в прошлом 
        /// </summary>
        /// <value>Ответы:   created - Объявление создано   audience - Список аудитории null или пустой   announcementCreationForbidden - Пользователь не имеет права создать объявление   announcementCategoriesDoNotExist - В качестве одного или нескольких из id категорий объявлений прикреплен несуществующий в базе id   filesDoNotExist - В качестве одного или нескольких из id файлов прикреплен несуществующий в базе id   surveysDoNotExist - В качестве одного или нескольких из id опросов прикреплен несуществующий в базе id   delayedPublishingMomentIsInPast - Момент отложенной публикации уже наступил в прошлом   delayedHidingMomentIsInPast - Момент автоматического сокрытия уже наступил в прошлом </value>
        [TypeConverter(typeof(CustomEnumConverter<CreateAnnouncementResponses>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum CreateAnnouncementResponses
        {
            
            /// <summary>
            /// Enum Created for created
            /// </summary>
            [EnumMember(Value = "created")]
            Created = 1,
            
            /// <summary>
            /// Enum UsergroupListNullOrEmpty for usergroupListNullOrEmpty
            /// </summary>
            [EnumMember(Value = "usergroupListNullOrEmpty")]
            UsergroupListNullOrEmpty = 2,
            
            /// <summary>
            /// Enum AnnouncementCreationForbidden for announcementCreationForbidden
            /// </summary>
            [EnumMember(Value = "announcementCreationForbidden")]
            AnnouncementCreationForbidden = 3,
            
            /// <summary>
            /// Enum AnnouncementCategoriesDoNotExist for announcementCategoriesDoNotExist
            /// </summary>
            [EnumMember(Value = "announcementCategoriesDoNotExist")]
            AnnouncementCategoriesDoNotExist = 4,
            
            /// <summary>
            /// Enum FilesDoNotExist for filesDoNotExist
            /// </summary>
            [EnumMember(Value = "filesDoNotExist")]
            FilesDoNotExist = 5,
            
            /// <summary>
            /// Enum SurveysDoNotExist for surveysDoNotExist
            /// </summary>
            [EnumMember(Value = "surveysDoNotExist")]
            SurveysDoNotExist = 6,
            
            /// <summary>
            /// Enum DelayedPublishingMomentIsInPast for delayedPublishingMomentIsInPast
            /// </summary>
            [EnumMember(Value = "delayedPublishingMomentIsInPast")]
            DelayedPublishingMomentIsInPast = 7,
            
            /// <summary>
            /// Enum DelayedHidingMomentIsInPast for delayedHidingMomentIsInPast
            /// </summary>
            [EnumMember(Value = "delayedHidingMomentIsInPast")]
            DelayedHidingMomentIsInPast = 8
        }
}
