/*
 * API Шлюз. Объявления
 *
 * API шлюза для управления объявлениями
 *
 * The version of the OpenAPI document: 0.0.2
 *
 * Generated by: https://openapi-generator.tech
 */

using System.ComponentModel;
using System.Runtime.Serialization;
using BulletInBoardServer.Controllers.AnnouncementsController.Converters;
using Newtonsoft.Json;

namespace BulletInBoardServer.Controllers.AnnouncementsController.Models
{ 
        /// <summary>
        /// Ответы:   ok - Ок   incorrectIdentifierFormat - Некорректный формат идентификатора   unauthorized - Пользователь не авторизован для выполнения операции   unhideForbidden - Пользователь не имеет права скрыть объявление   announcementDoesNotExist - Объявление не существует   announcementNotHidden - Объявление не является скрытым 
        /// </summary>
        /// <value>Ответы:   ok - Ок   incorrectIdentifierFormat - Некорректный формат идентификатора   unauthorized - Пользователь не авторизован для выполнения операции   unhideForbidden - Пользователь не имеет права скрыть объявление   announcementDoesNotExist - Объявление не существует   announcementNotHidden - Объявление не является скрытым </value>
        [TypeConverter(typeof(CustomEnumConverter<RestoreHiddenAnnouncementResponses>))]
        [JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public enum RestoreHiddenAnnouncementResponses
        {
            
            /// <summary>
            /// Enum Ok for ok
            /// </summary>
            [EnumMember(Value = "ok")]
            Ok = 1,
            
            /// <summary>
            /// Enum IncorrectIdentifierFormat for incorrectIdentifierFormat
            /// </summary>
            [EnumMember(Value = "incorrectIdentifierFormat")]
            IncorrectIdentifierFormat = 2,
            
            /// <summary>
            /// Enum UnhideForbidden for unhideForbidden
            /// </summary>
            [EnumMember(Value = "unhideForbidden")]
            UnhideForbidden = 3,
            
            /// <summary>
            /// Enum AnnouncementDoesNotExist for announcementDoesNotExist
            /// </summary>
            [EnumMember(Value = "announcementDoesNotExist")]
            AnnouncementDoesNotExist = 4,
            
            /// <summary>
            /// Enum AnnouncementNotHidden for announcementNotHidden
            /// </summary>
            [EnumMember(Value = "announcementNotHidden")]
            AnnouncementNotHidden = 5
        }
}
