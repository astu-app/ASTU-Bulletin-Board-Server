/*
 * API Шлюз. Объявления
 *
 * API шлюза для управления объявлениями
 *
 * The version of the OpenAPI document: 0.0.2
 *
 * Generated by: https://openapi-generator.tech
 */

using System;
using BulletInBoardServer.Controllers.AnnouncementsController.Attributes;
using BulletInBoardServer.Controllers.AnnouncementsController.Models;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;

namespace BulletInBoardServer.Controllers.AnnouncementsController.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public abstract class AnnouncementsApiController : ControllerBase
    { 
        /// <summary>
        /// Создать объявление
        /// </summary>
        /// <param name="createAnnouncementDto"></param>
        /// <response code="201">Created</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        /// <response code="409">Conflict</response>
        [HttpPost]
        [Route("/api/announcements/create")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("CreateAnnouncement")]
        [SwaggerResponse(statusCode: 201, type: typeof(CreateAnnouncementCreated), description: "Created")]
        [SwaggerResponse(statusCode: 400, type: typeof(CreateAnnouncementBadRequest), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(CreateAnnouncementForbidden), description: "Forbidden")]
        [SwaggerResponse(statusCode: 404, type: typeof(CreateAnnouncementNotFound), description: "Not Found")]
        [SwaggerResponse(statusCode: 409, type: typeof(CreateAnnouncementConflict), description: "Conflict")]
        public abstract IActionResult CreateAnnouncement([FromBody]CreateAnnouncementDto createAnnouncementDto);

        /// <summary>
        /// Удалить объявление
        /// </summary>
        /// <param name="body"></param>
        /// <response code="200">Ok</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        [HttpDelete]
        [Route("/api/announcements/delete")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("DeleteAnnouncement")]
        [SwaggerResponse(statusCode: 200, type: typeof(DeleteAnnouncementOk), description: "Ok")]
        [SwaggerResponse(statusCode: 400, type: typeof(DeleteAnnouncementBadRequest), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(DeleteAnnouncementForbidden), description: "Forbidden")]
        [SwaggerResponse(statusCode: 404, type: typeof(DeleteAnnouncementNotFound), description: "Not Found")]
        public abstract IActionResult DeleteAnnouncement([FromBody]Guid body);

        /// <summary>
        /// Получить подробности о выбранном объявлении
        /// </summary>
        /// <param name="body"></param>
        /// <response code="200">Ok</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        [HttpGet]
        [Route("/api/announcements/get-details")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("GetAnnouncementDetails")]
        [SwaggerResponse(statusCode: 200, type: typeof(GetAnnouncementDetailsOk), description: "Ok")]
        [SwaggerResponse(statusCode: 400, type: typeof(GetAnnouncementDetailsBadRequest), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(GetAnnouncementDetailsForbidden), description: "Forbidden")]
        [SwaggerResponse(statusCode: 404, type: typeof(GetAnnouncementDetailsNotFound), description: "Not Found")]
        public abstract IActionResult GetAnnouncementDetails([FromBody]Guid body);

        /// <summary>
        /// Получить список объявлений, ожидающих отложенное сокрытие
        /// </summary>
        /// <response code="200">Ok</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpGet]
        [Route("/api/announcements/delayed-hidden/get-list")]
        [ValidateModelState]
        [SwaggerOperation("GetDelayedHiddenAnnouncementList")]
        [SwaggerResponse(statusCode: 200, type: typeof(GetDelayedHiddenAnnouncementListOk), description: "Ok")]
        [SwaggerResponse(statusCode: 403, type: typeof(GetDelayedHiddenAnnouncementListForbidden), description: "Forbidden")]
        public abstract IActionResult GetDelayedHiddenAnnouncementList();

        /// <summary>
        /// Получить список объявлений, ожидающих отложенную публикацию
        /// </summary>
        /// <response code="200">Ok</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpGet]
        [Route("/api/announcements/delayed-publishing/get-list")]
        [ValidateModelState]
        [SwaggerOperation("GetDelayedPublishingAnnouncementList")]
        [SwaggerResponse(statusCode: 200, type: typeof(GetDelayedPublishingAnnouncementListOk), description: "Ok")]
        [SwaggerResponse(statusCode: 403, type: typeof(GetDelayedPublishingAnnouncementListForbidden), description: "Forbidden")]
        public abstract IActionResult GetDelayedPublishingAnnouncementList();

        /// <summary>
        /// Получить список скрытых объявлений
        /// </summary>
        /// <response code="200">Ok</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpGet]
        [Route("/api/announcements/hidden/get-list")]
        [ValidateModelState]
        [SwaggerOperation("GetHiddenAnnouncementList")]
        [SwaggerResponse(statusCode: 200, type: typeof(GetHiddenAnnouncementListOk), description: "Ok")]
        [SwaggerResponse(statusCode: 403, type: typeof(GetHiddenAnnouncementListForbidden), description: "Forbidden")]
        public abstract IActionResult GetHiddenAnnouncementList();

        /// <summary>
        /// Получить список опубликованных объявлений
        /// </summary>
        /// <response code="200">Ok</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        [HttpGet]
        [Route("/api/announcements/published/get-list")]
        [ValidateModelState]
        [SwaggerOperation("GetPostedAnnouncementList")]
        [SwaggerResponse(statusCode: 200, type: typeof(GetPostedAnnouncementListOk), description: "Ok")]
        [SwaggerResponse(statusCode: 403, type: typeof(GetPostedAnnouncementListForbidden), description: "Forbidden")]
        public abstract IActionResult GetPostedAnnouncementList();

        /// <summary>
        /// Скрыть опубликованное объявление
        /// </summary>
        /// <param name="body"></param>
        /// <response code="200">Ok</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        /// <response code="409">Conflict</response>
        [HttpPost]
        [Route("/api/announcements/published/hide")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("HidePostedAnnouncement")]
        [SwaggerResponse(statusCode: 200, type: typeof(HidePostedAnnouncementOk), description: "Ok")]
        [SwaggerResponse(statusCode: 400, type: typeof(HidePostedAnnouncementBadRequest), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(HidePostedAnnouncementForbidden), description: "Forbidden")]
        [SwaggerResponse(statusCode: 404, type: typeof(HidePostedAnnouncementNotFound), description: "Not Found")]
        [SwaggerResponse(statusCode: 409, type: typeof(HidePostedAnnouncementConflict), description: "Conflict")]
        public abstract IActionResult HidePostedAnnouncement([FromBody]Guid body);

        /// <summary>
        /// Сразу опубликовать отложенное объявление
        /// </summary>
        /// <param name="body"></param>
        /// <response code="200">Ok</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        /// <response code="409">Conflict</response>
        [HttpPost]
        [Route("/api/announcements/delayed-publishing/publish-immediately")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("PublishImmediatelyDelayedPublishingAnnouncement")]
        [SwaggerResponse(statusCode: 200, type: typeof(PublishImmediatelyDelayedPublishingAnnouncementOk), description: "Ok")]
        [SwaggerResponse(statusCode: 400, type: typeof(PublishImmediatelyDelayedPublishingAnnouncementBadRequest), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(PublishImmediatelyDelayedPublishingAnnouncementForbidden), description: "Forbidden")]
        [SwaggerResponse(statusCode: 404, type: typeof(PublishImmediatelyDelayedPublishingAnnouncementNotFound), description: "Not Found")]
        [SwaggerResponse(statusCode: 409, type: typeof(PublishImmediatelyDelayedPublishingAnnouncementConflict), description: "Conflict")]
        public abstract IActionResult PublishImmediatelyDelayedPublishingAnnouncement([FromBody]Guid body);

        /// <summary>
        /// Восстановить скрытое объявление
        /// </summary>
        /// <param name="body"></param>
        /// <response code="200">Ok</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        /// <response code="409">Conflict</response>
        [HttpPost]
        [Route("/api/announcements/hidden/restore")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("RestoreHiddenAnnouncement")]
        [SwaggerResponse(statusCode: 200, type: typeof(RestoreHiddenAnnouncementOk), description: "Ok")]
        [SwaggerResponse(statusCode: 400, type: typeof(RestoreHiddenAnnouncementBadRequest), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(RestoreHiddenAnnouncementForbidden), description: "Forbidden")]
        [SwaggerResponse(statusCode: 404, type: typeof(RestoreHiddenAnnouncementNotFound), description: "Not Found")]
        [SwaggerResponse(statusCode: 409, type: typeof(RestoreHiddenAnnouncementConflict), description: "Conflict")]
        public abstract IActionResult RestoreHiddenAnnouncement([FromBody]Guid body);

        /// <summary>
        /// Редактировать объявление
        /// </summary>
        /// <param name="updateAnnouncementDto"></param>
        /// <response code="200">Ok</response>
        /// <response code="400">Bad Request</response>
        /// <response code="401">Unauthorized</response>
        /// <response code="403">Forbidden</response>
        /// <response code="404">Not Found</response>
        /// <response code="409">Conflict</response>
        [HttpPut]
        [Route("/api/announcements/update")]
        [Consumes("application/json")]
        [ValidateModelState]
        [SwaggerOperation("UpdateAnnouncement")]
        [SwaggerResponse(statusCode: 200, type: typeof(UpdateAnnouncementOk), description: "Ok")]
        [SwaggerResponse(statusCode: 400, type: typeof(UpdateAnnouncementBadRequest), description: "Bad Request")]
        [SwaggerResponse(statusCode: 403, type: typeof(UpdateAnnouncementForbidden), description: "Forbidden")]
        [SwaggerResponse(statusCode: 404, type: typeof(UpdateAnnouncementNotFound), description: "Not Found")]
        [SwaggerResponse(statusCode: 409, type: typeof(UpdateAnnouncementConflict), description: "Conflict")]
        public abstract IActionResult UpdateAnnouncement([FromBody]UpdateAnnouncementDto updateAnnouncementDto);
    }
}
