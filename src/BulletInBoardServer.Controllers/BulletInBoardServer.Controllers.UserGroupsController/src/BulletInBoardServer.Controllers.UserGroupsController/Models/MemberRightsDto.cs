/*
 * API Шлюз. Группы пользователей
 *
 * API шлюза для управления группами пользователей
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Runtime.Serialization;
using System.Text;

namespace BulletInBoardServer.Controllers.UserGroupsController.Models
{ 
    /// <summary>
    /// Права пользователя в группе пользователей
    /// </summary>
    [DataContract]
    public class MemberRightsDto : IEquatable<MemberRightsDto>
    {
        /// <summary>
        /// Gets or Sets CanCreateAnnouncements
        /// </summary>
        [DataMember(Name="canCreateAnnouncements", EmitDefaultValue=true)]
        public bool CanCreateAnnouncements { get; set; } = false;

        /// <summary>
        /// Gets or Sets CanCreateSurveys
        /// </summary>
        [DataMember(Name="canCreateSurveys", EmitDefaultValue=true)]
        public bool CanCreateSurveys { get; set; } = false;

        /// <summary>
        /// Gets or Sets CanRuleUserGroupHierarchy
        /// </summary>
        [DataMember(Name="canRuleUserGroupHierarchy", EmitDefaultValue=true)]
        public bool CanRuleUserGroupHierarchy { get; set; } = false;

        /// <summary>
        /// Gets or Sets CanViewUserGroupDetails
        /// </summary>
        [DataMember(Name="canViewUserGroupDetails", EmitDefaultValue=true)]
        public bool CanViewUserGroupDetails { get; set; } = false;

        /// <summary>
        /// Gets or Sets CanCreateUserGroups
        /// </summary>
        [DataMember(Name="canCreateUserGroups", EmitDefaultValue=true)]
        public bool CanCreateUserGroups { get; set; } = false;

        /// <summary>
        /// Gets or Sets CanEditUserGroups
        /// </summary>
        [DataMember(Name="canEditUserGroups", EmitDefaultValue=true)]
        public bool CanEditUserGroups { get; set; } = false;

        /// <summary>
        /// Gets or Sets CanEditMembers
        /// </summary>
        [DataMember(Name="canEditMembers", EmitDefaultValue=true)]
        public bool CanEditMembers { get; set; } = false;

        /// <summary>
        /// Gets or Sets CanEditMemberRights
        /// </summary>
        [DataMember(Name="canEditMemberRights", EmitDefaultValue=true)]
        public bool CanEditMemberRights { get; set; } = false;

        /// <summary>
        /// Gets or Sets CanEditUserGroupAdmin
        /// </summary>
        [DataMember(Name="canEditUserGroupAdmin", EmitDefaultValue=true)]
        public bool CanEditUserGroupAdmin { get; set; } = false;

        /// <summary>
        /// Gets or Sets CanDeleteUserGroup
        /// </summary>
        [DataMember(Name="canDeleteUserGroup", EmitDefaultValue=true)]
        public bool CanDeleteUserGroup { get; set; } = false;

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class MemberRightsDto {\n");
            sb.Append("  CanCreateAnnouncements: ").Append(CanCreateAnnouncements).Append("\n");
            sb.Append("  CanCreateSurveys: ").Append(CanCreateSurveys).Append("\n");
            sb.Append("  CanRuleUserGroupHierarchy: ").Append(CanRuleUserGroupHierarchy).Append("\n");
            sb.Append("  CanViewUserGroupDetails: ").Append(CanViewUserGroupDetails).Append("\n");
            sb.Append("  CanCreateUserGroups: ").Append(CanCreateUserGroups).Append("\n");
            sb.Append("  CanEditUserGroups: ").Append(CanEditUserGroups).Append("\n");
            sb.Append("  CanEditMembers: ").Append(CanEditMembers).Append("\n");
            sb.Append("  CanEditMemberRights: ").Append(CanEditMemberRights).Append("\n");
            sb.Append("  CanEditUserGroupAdmin: ").Append(CanEditUserGroupAdmin).Append("\n");
            sb.Append("  CanDeleteUserGroup: ").Append(CanDeleteUserGroup).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (obj is null) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((MemberRightsDto)obj);
        }

        /// <summary>
        /// Returns true if MemberRightsDto instances are equal
        /// </summary>
        /// <param name="other">Instance of MemberRightsDto to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(MemberRightsDto other)
        {
            if (other is null) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    CanCreateAnnouncements == other.CanCreateAnnouncements ||
                    
                    CanCreateAnnouncements.Equals(other.CanCreateAnnouncements)
                ) && 
                (
                    CanCreateSurveys == other.CanCreateSurveys ||
                    
                    CanCreateSurveys.Equals(other.CanCreateSurveys)
                ) && 
                (
                    CanRuleUserGroupHierarchy == other.CanRuleUserGroupHierarchy ||
                    
                    CanRuleUserGroupHierarchy.Equals(other.CanRuleUserGroupHierarchy)
                ) && 
                (
                    CanViewUserGroupDetails == other.CanViewUserGroupDetails ||
                    
                    CanViewUserGroupDetails.Equals(other.CanViewUserGroupDetails)
                ) && 
                (
                    CanCreateUserGroups == other.CanCreateUserGroups ||
                    
                    CanCreateUserGroups.Equals(other.CanCreateUserGroups)
                ) && 
                (
                    CanEditUserGroups == other.CanEditUserGroups ||
                    
                    CanEditUserGroups.Equals(other.CanEditUserGroups)
                ) && 
                (
                    CanEditMembers == other.CanEditMembers ||
                    
                    CanEditMembers.Equals(other.CanEditMembers)
                ) && 
                (
                    CanEditMemberRights == other.CanEditMemberRights ||
                    
                    CanEditMemberRights.Equals(other.CanEditMemberRights)
                ) && 
                (
                    CanEditUserGroupAdmin == other.CanEditUserGroupAdmin ||
                    
                    CanEditUserGroupAdmin.Equals(other.CanEditUserGroupAdmin)
                ) && 
                (
                    CanDeleteUserGroup == other.CanDeleteUserGroup ||
                    
                    CanDeleteUserGroup.Equals(other.CanDeleteUserGroup)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    
                    hashCode = hashCode * 59 + CanCreateAnnouncements.GetHashCode();
                    
                    hashCode = hashCode * 59 + CanCreateSurveys.GetHashCode();
                    
                    hashCode = hashCode * 59 + CanRuleUserGroupHierarchy.GetHashCode();
                    
                    hashCode = hashCode * 59 + CanViewUserGroupDetails.GetHashCode();
                    
                    hashCode = hashCode * 59 + CanCreateUserGroups.GetHashCode();
                    
                    hashCode = hashCode * 59 + CanEditUserGroups.GetHashCode();
                    
                    hashCode = hashCode * 59 + CanEditMembers.GetHashCode();
                    
                    hashCode = hashCode * 59 + CanEditMemberRights.GetHashCode();
                    
                    hashCode = hashCode * 59 + CanEditUserGroupAdmin.GetHashCode();
                    
                    hashCode = hashCode * 59 + CanDeleteUserGroup.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(MemberRightsDto left, MemberRightsDto right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(MemberRightsDto left, MemberRightsDto right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
